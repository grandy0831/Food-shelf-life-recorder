name: Flutter Build and Upload Android APK

on:
  push:
    branches: [ main ]
    # tags:
    # - "v*.*.*"          # In this case when you tag your commit with v1.0.0 for example

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: microsoft

      #  Decode keystore File from repository secrets
      #  Keep the keystore file private; donâ€™t check it into public source control!
      
      #- name: Decode KeyStore File (.jks)            
      #  run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/keystore.jks

      #- name: Decode android/key.properties
      #  run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'main'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build APK Release
        run: flutter build apk --release

      - name: Build an AppBundle
        run: flutter build appbundle --release

      - name: Save APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flutter-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Get pubspec version
        id: get_pubspec_version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo ::set-output name=VERSION::$VERSION

      - name: Create git tag
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag $VERSION
          git push origin $VERSION

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/bundle/release/*.aab
            build/app/outputs/flutter-apk/*.apk
          tag: ${{ steps.get_pubspec_version.outputs.VERSION }}
          # token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}

  # TODO:  Upload to Firebase - for App Distribution
  # Release job, upload the apk or aab to Firebase App Distribution
  # release:
  #   name: Sends Release APK to Firebase
  #   needs: [ build ]
  #   runs-on: ubuntu-latest
  #   steps:
    
  #   # Retrieve apk file from GitHub artifacts
  #   - uses: actions/checkout@v3
  #   - name: Get flutter-apk from artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: flutter-apk
  #  OR
  #       name: flutter-appbundle

  #   # Upload apk file to Firebase
  #   - name: Upload artifact to Firebase App Distribution
  #     uses: wzieba/Firebase-Distribution-Github-Action@v1
  #     with:
  #       appId: ${{secrets.FIREBASE_IOS_APP_ID}}
  #       serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
  #       groups: android-developers
  #       file: ${{secrets.APP_NAME}}.apk
  #  OR
  #       file: ${{secrets.APP_NAME}}.aab
